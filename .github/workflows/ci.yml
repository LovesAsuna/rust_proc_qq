name: CI

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

env:
  REQWEST_TEST_BODY_FULL: 1
  RUST_BACKTRACE: 1

jobs:
  ci-pass:
    name: CI is green
    runs-on: ubuntu-latest
    needs:
      - style
      - test-platforms
      - test-android
      - test-features
    steps:
      - run: exit 0

  style:
    name: Check Style

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt
          profile: minimal
          override: true

      - name: cargo fmt -- --check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check

      - name: temporary workaround - fmt all files under src
        run: cargo fmt -- --check $(find . -name '*.rs' -print)

  test-platforms:
    name: Test platforms
    needs: [style]
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: macos-latest
            toolchain: nightly-x86_64-apple-darwin
            target: x86_64-apple-darwin
          - os: ubuntu-latest
            toolchain: nightly-x86_64-unknown-linux-gnu
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            toolchain: nightly-x86_64-pc-windows-msvc
            target: x86_64-pc-windows-msvc
          - os: windows-latest
            toolchain: nightly-x86_64-pc-windows-gnu
            target: x86_64-pc-windows-gnu

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.config.toolchain }}
          profile: minimal
          override: true

      - name: Add mingw64 to path for x86_64-gnu
        if: matrix.config.target == 'x86_64-pc-windows-gnu'
        shell: bash
        run: |
          echo "C:\msys64\mingw64\bin" >> $GITHUB_PATH
          echo "C:\msys64\usr\bin" >> $GITHUB_PATH

      # clang used by silk-rs

      - name: Update gcc
        if: matrix.config.target == 'x86_64-pc-windows-gnu'
        run: pacman.exe -Sy --noconfirm mingw-w64-x86_64-toolchain mingw-w64-x86_64-clang mingw-w64-x86_64-llvm

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --target ${{ matrix.config.target }} --package proc_qq_template

  test-android:
    name: Test android
    needs: [style]

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: aarch64-linux-android
          profile: minimal
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          # disable default-tls feature since cross-compiling openssl is dragons
          args: --target aarch64-linux-android --package proc_qq

  test-features:
    name: Test features
    needs: [style]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        config:
          - flags: --all-features
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --package proc_qq ${{ matrix.config.flags }}
